/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> temp;
    void travel(TreeNode* root){
        if(root==nullptr){
            return;
        }    
        temp.push_back(root->val);
        travel(root->left);
        travel(root->right);
    }
    
    int minDiffInBST(TreeNode* root) {
        travel(root);
        vector<int> ans;
        for(int i=0;i<temp.size();i++){
            for(int j=i+1;j<temp.size();j++){
                ans.push_back(abs(temp[i]-temp[j]));
            }
        }
        for(auto it:ans){
            cout<<it<<" ";
        }
        sort(ans.begin(),ans.end());
        
        return ans[0];
    }
};
