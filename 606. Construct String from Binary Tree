/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> ans;
    void travel(TreeNode* root){
        if(root==NULL){
            return;
        }
        ans.push_back(to_string(root->val));
        if(root->left!=NULL || root->right!=NULL){
            ans.push_back("(");
            travel(root->left);
            ans.push_back(")");
        }
        else{
            travel(root->left);
        }
        if(root->right!=NULL){
            ans.push_back("(");
            travel(root->right);
            ans.push_back(")");            
        }
        else{
            travel(root->right);
        }

    }
    string tree2str(TreeNode* t) {
        travel(t);
        string str="";
        for(auto it:ans){
            str+=it;
        }
        return str;
    }
};
