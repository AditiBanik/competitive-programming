/**
 * class Tree {
 *     public:
 *         int val;
 *         Tree *left;
 *         Tree *right;
 * };
 */
bool solve(Tree* root) {
    if(root==NULL){
        return false;
    }
    vector<int> depth_of_leaves;
    queue<Tree*> q;
    q.push(root);
    int depth=0;
    while(!q.empty()){
        int len=q.size();
        for(int i=0;i<len;i++){
            Tree* front=q.front();
            q.pop();
            if(front->left){
                q.push(front->left);
            }
            if(front->right){
                q.push(front->right);
            }
            if(front->left==NULL && front->right==NULL){
                depth_of_leaves.push_back(depth);
            }
        }
        depth+=1;
    }
    sort(depth_of_leaves.begin(),depth_of_leaves.end());
    if(depth_of_leaves.size()==1){
        return true;
    }
    else if(depth_of_leaves[0]==depth_of_leaves[depth_of_leaves.size()-1]){
        return true;
    }
    else{
        return false;
    }
}
