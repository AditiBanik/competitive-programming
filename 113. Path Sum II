/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    vector<vector<int>> travel(TreeNode* root,vector<int> data,vector<vector<int>>& path,int targetSum){
        
        if(root==nullptr){
            return path;
        }
        
        data.push_back(root->val); 
        
        if(root->left==nullptr && root->right==nullptr){
            if(accumulate(data.begin(),data.end(),0)==targetSum)
            path.push_back(data);
        }
        
            travel(root->left,data,path,targetSum);
            travel(root->right,data,path,targetSum);

        return path;
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> path;
        vector<int> data;
        path=travel(root,data,path,targetSum);
        return path;
    }
};
