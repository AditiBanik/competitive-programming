/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> plist;
    vector<string> qlist;
        
    void recp(TreeNode* temp){
        if(temp==NULL){
            plist.push_back("null");
            return;
        }
        plist.push_back(to_string(temp->val));
        recp(temp->left);
        recp(temp->right);
    }
    
    void recq(TreeNode* temp){
        if(temp==NULL){
            qlist.push_back("null");
            return;
        }
        qlist.push_back(to_string(temp->val));
        recq(temp->left);
        recq(temp->right);
    }
    
    
    bool isSameTree(TreeNode* p, TreeNode* q) {  
        recp(p);
        recq(q);
        bool con=true;
        
        if(plist.size()!=qlist.size()){
            con=false;
        }
        else{
            for(int i=0;i<plist.size();i++){
                if(plist[i]!=qlist[i]){
                    con=false;
                }
            }
        }
        return con;
    }
};
