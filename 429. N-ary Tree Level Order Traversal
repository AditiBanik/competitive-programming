/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> res;
        queue<Node*> q;
        if(root==NULL){
            return res;
        }
        q.push(root);
        vector<int> temp;
        while(!q.empty()){
            int len=q.size();
            for(int i=0;i<len;i++){
                Node* front=q.front();
                q.pop();
                for(auto it:front->children){
                    q.push(it);
                }
                temp.push_back(front->val);
            }
            res.push_back(temp);
            temp.clear();
        }
        return res;
    }
};
