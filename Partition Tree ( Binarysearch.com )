/**
 * class Tree {
 *     public:
 *         int val;
 *         Tree *left;
 *         Tree *right;
 * };
 */
vector<int> solve(Tree* root) {
    vector<int> v;
    if(root==NULL){
        v.push_back(0);
        v.push_back(0);
        return v;
    }
    queue<Tree*> q;
    int countnonleaf=0;
    int countleaf=0;
    q.push(root);
    while(!q.empty()){
        int len=q.size();
        for(int i=0;i<len;i++){
            Tree* front=q.front();
            q.pop();
            if(front->left!=NULL ||front->right!=NULL){
                countnonleaf+=1;
            }
            if(front->left==NULL && front->right==NULL){
                countleaf+=1;
            }
            if(front->left){
                q.push(front->left);
            }
            if(front->right){
                q.push(front->right);
            }
        }
    }
    v.push_back(countleaf);
    v.push_back(countnonleaf);
    return v;
    
}
