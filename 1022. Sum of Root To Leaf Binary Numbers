/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void travel(TreeNode* root,vector<int>& path,vector<int> temp){
        if(root==NULL){
            return;
        }
        temp.push_back(root->val);
        if(root->left==NULL && root->right==NULL){
            string bin_string = "";
            for(auto it:temp){
                bin_string+=to_string(it);
            }
            int number =0;
            number = stoi(bin_string, 0, 2);
            path.push_back(number);
        }
        travel(root->left,path,temp);
        travel(root->right,path,temp);
    }
    
    int sumRootToLeaf(TreeNode* root) {
        vector<int> path;
        vector<int> temp;
        travel(root,path,temp);
        for(auto it:path){
            cout<<it<<" ";
        }
        return accumulate(path.begin(),path.end(),0);
    }
};
