
void lac(NODE *root,int x,int y,int &s)
{
    if(!root){
        return;
    }
    if(x<root->data&&y<root->data){
        lac(root->left,x,y,s);
    }
    else if(x>root->data&&y>root->data){
        lac(root->right,x,y,s);
    }
    else{
        s= root->data;
    }
}
void ino(NODE *root,int s,int p,vector<int> v,int &l){
    if(!root){
        return;
    }
    v.push_back(root->data);
    if(v[v.size()-1]==s){
        if(v.size()>=p){
            l=v[v.size()-p];
            return;
        }
        else{
            l=-1;
            return;
        }
    }
    ino(root->left,s,p,v,l);
    ino(root->right,s,p,v,l);
}

int pthCommonAncestor(int x,int y,NODE *root,int p,vector<int> &vec){
    int s=0;
    lac(root,x,y,s);

    vector<int> v;
    int l=0;
    ino(root,s,p,v,l);
    return l;
}
