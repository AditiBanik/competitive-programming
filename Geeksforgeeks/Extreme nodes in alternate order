class Solution{
  public:
    /* Function to print nodes of extreme corners
    of each level in alternate order */
    vector<int> ExtremeNodes(Node* root)
    {
        vector<int> ans;
        if(root==NULL){
            return ans;
        }
        queue<Node*> q;
        q.push(root);
        int level=0;
        while(!q.empty()){
            int len=q.size();
            for(int i=0;i<len;i++){
                Node* curr=q.front();
                q.pop();
                if(curr->left){
                    q.push(curr->left);
                }
                if(curr->right){
                    q.push(curr->right);
                }
                
                if(level%2!=0){
                    if(i==0){
                        ans.push_back(curr->data);
                    }
                }
                else{
                    if(i==len-1){
                        ans.push_back(curr->data);
                    }
                }
                
            }
            level+=1;
        }
        return ans;
    }
};
