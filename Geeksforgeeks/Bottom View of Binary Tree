void travel(Node *root,int depth,int pos,map<int,pair<int,int>> &m){
    if(root==NULL){
        return;
    }
    
    if(m.count(pos)==0){
        m[pos]=make_pair(depth,root->data);
    }
    else{
        if(m[pos].first<=depth){
            m[pos]=make_pair(depth,root->data);
        }
    }
    
    travel(root->left,depth+1,pos-1,m);
    travel(root->right,depth+1,pos+1,m);
}
vector <int> bottomView(Node *root)
{
    map<int,pair<int,int>> m;
    vector<int> ans;
    int depth=0;
    int pos=0;
    travel(root,depth,pos,m);
    
    for(auto it:m){
        ans.push_back(it.second.second);
    }
    return ans;
    
}
