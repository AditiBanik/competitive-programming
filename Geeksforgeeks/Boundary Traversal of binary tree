class Solution {
public:
    void leftboundary(Node* root,vector<int>& ans){
        if(root==NULL){
            return;
        }
        if(root->left==NULL and root->right==NULL){
            return;
        }
        ans.push_back(root->data);
        if(root->left){
            leftboundary(root->left,ans);
        }
        else if(root->right){
            leftboundary(root->right,ans);
        }
    }
    
    void rightboundary(Node* root,vector<int>& ans){
        if(root==NULL){
            return;
        }
        if(root->left==NULL and root->right==NULL){
            return;
        }
        if(root->right){
            rightboundary(root->right,ans);
        }
        else if(root->left){
            rightboundary(root->left,ans);
        }
        ans.push_back(root->data);
    }
    
    void leaves(Node* root,vector<int>& ans){
        if(root==NULL){
            return;
        }
        if(root->left==NULL and root->right==NULL){
            ans.push_back(root->data);
        }
        leaves(root->left,ans);
        leaves(root->right,ans);
    }
    vector <int> printBoundary(Node *root)
    {
        vector<int> ans;
        ans.push_back(root->data);
        leftboundary(root->left,ans);
        leaves(root,ans);
        rightboundary(root->right,ans);
        return ans;
    }
};
