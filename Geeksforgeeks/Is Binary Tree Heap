//Structure of node
/*struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};*/

class Solution {
  public:
  int findsize(Node* root){
      if(root==NULL){
          return 0;
      }
      return 1+findsize(root->left)+findsize(root->right);
  }
  
    bool check(Node* root,int n,int index){
        if(root==NULL){
            return true;
        }
        if(index>n){
            return false;
        }
        if((root->left && root->data < root->left->data) || (root->right && root->data < root->right->data)){
            return false;
        }
        return (check(root->left,n,2*index+1) && check(root->right,n,2*index+2));
    
    }
    bool isHeap(struct Node * root)
    {
        if(root==NULL){
            return 0;
        }
        int n=findsize(root);
        return check(root,n,0);
    }
};
