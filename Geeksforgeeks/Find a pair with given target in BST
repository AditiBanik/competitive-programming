class Solution{
  public:
    // root : the root Node of the given BST
    // target : the target sum
    void travel(struct Node* root,vector<int>& ans){
        if(root==NULL){
            return;
        }
        travel(root->left,ans);
        ans.push_back(root->data);
        travel(root->right,ans);
    }
    int isPairPresent(struct Node *root, int target)
    {
        vector<int> ans;
        travel(root,ans);
        int left=0;
        int right=ans.size()-1;
        while(left<right){
            if(ans[left]+ans[right]==target){
                return 1;
            }
            else if(ans[left]+ans[right]<target){
                left+=1;
            }
            else{
                right-=1;
            }
        }
    return 0;
    }
};
