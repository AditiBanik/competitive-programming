int DFS(vector<vector<int>>& matrix,int posx,int posy,int n,int m,vector<vector<int>> dir){
    int count=1;
    matrix[posx][posy]=0;

    for(int i=0;i<4;i++){
        int x=posx+dir[i][0];
        int y=posy+dir[i][1];
        if(x>=0 && x<n && y>=0 && y<m && matrix[x][y]==1){
            count+=DFS(matrix,x,y,n,m,dir);
        }
    }
    return count;
}

int solve(vector<vector<int>>& matrix) {
    int max_value=0;
    int n=matrix.size();
    int m=matrix[0].size();
    vector<vector<int>> dir={{1,0},{0,1},{-1,0},{0,-1}};
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(matrix[i][j]==1){
                max_value=max(max_value,DFS(matrix,i,j,n,m,dir));
            }
        }
    }
    return max_value;
}
