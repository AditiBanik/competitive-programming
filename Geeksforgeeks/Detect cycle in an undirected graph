class Solution 
{
    public:
    bool checkforcycle(int node,int parent,vector<int>& visited,vector<int> adj[]){
        visited[node]=1;
        for(auto it:adj[node]){
            if(visited[it]==0){
                if(checkforcycle(it,node,visited,adj)){
                    return true;
                }
            }
            else if(it!=parent){
                return true;
            }
        }
        
        return false;
    }
    
    //Function to detect cycle in an undirected graph.
	bool isCycle(int V, vector<int>adj[])
	{
	    vector<int> visited(V+1,0);
	    for(int i=0;i<V;i++){
	        if(!visited[i]){
	            if(checkforcycle(i,-1,visited,adj)){
	                return true;
	            }
	        }
	    }
	    return false;
	}
};
