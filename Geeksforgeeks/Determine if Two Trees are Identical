struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
};
*/


   
class Solution
{
    public:
    //Function to check if two trees are identical.
    void travel(Node *root,vector<int>& temp){
        if(root==NULL){
            return;
        }
        temp.push_back(root->data);
        travel(root->left,temp);
        travel(root->right,temp);
    }
    bool isIdentical(Node *r1, Node *r2)
    {
        vector<int> temp;
        vector<int> first;
        travel(r1,temp);
        first=temp;
        temp.clear();
        travel(r2,temp);
        
        if(temp.size()==first.size()){
            for(int i=0;i<first.size();i++){
                if(first[i]!=temp[i]){
                    return false;
                }
            }
        }
        else{
            return false;
        }
        return true;
    }
};
