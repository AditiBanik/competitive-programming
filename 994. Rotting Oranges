class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int fresh=0;
        queue<vector<int>> q;
        vector<vector<int>> dir={{-1, 0}, {1, 0}, {0, -1}, {0, 1}};
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[i].size();j++){
                if(grid[i][j]==1){
                    fresh+=1;
                }
                if(grid[i][j]==2){
                    q.push({i,j});
                }
            }
        }
        int res=-1;
        while(!q.empty()){
            int len=q.size();
            for(int i=0;i<len;i++){
                vector<int> cur = q.front();
                q.pop();
                for(int i=0;i<4;i++){
                    int x=cur[0]+dir[i][0];
                    int y=cur[1]+dir[i][1];
                        if(x>=0 && x<grid.size() && y>=0 && y<grid[0].size() &&grid[x][y]==1){
                            grid[x][y]=2;
                            q.push({x,y});
                            fresh-=1;
                        }
                    }
                }
            res+=1;
        }
        if(fresh>0){
            return -1;
        }
        if(res==-1){
            return 0;
        }
        return res;
    }
    
};
