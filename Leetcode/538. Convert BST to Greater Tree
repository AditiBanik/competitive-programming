/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
        vector<int> ans;
    void DFS(TreeNode* root){
        if(root==NULL){
            return;
        }
        DFS(root->left);
        ans.push_back(root->val);
        DFS(root->right);
    }
    
    void sum(TreeNode* root){
        if(root==NULL){
            return;
        }
        sum(root->left);
        int t=root->val;
        for(int i=ans.size()-1;i>=0;i--){
            if(t<ans[i]){
                root->val+=ans[i];
            }
            else{
                break;
            }
        }
        sum(root->right);
    }
    TreeNode* convertBST(TreeNode* root) {
        TreeNode* temp=root;
        DFS(temp);
        temp=root;
        sum(temp);
        return root;
    }
};
