/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    map<int,map<int,multiset<int>>> m;
    void travel(TreeNode* root, int pos, int depth){
        if(root){
            m[pos][depth].insert(root->val);
            travel(root->left,pos-1,depth+1);
            travel(root->right,pos+1,depth+1);
        }
    }
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        int pos=0; 
        int depth=0;
        vector<vector<int>> ans;
        travel(root,pos,depth);
        for(auto it:m){
            vector<int> temp;
            for(auto t:it.second){
                temp.insert(temp.end(),t.second.begin(),t.second.end());
            }
            ans.push_back(temp);
        }
        
        return ans;
    }
};
