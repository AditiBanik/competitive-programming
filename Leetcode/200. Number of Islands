class Solution {
public:
    void DFS(vector<vector<char>>& grid,int x,int y,int n,int m){
        if(x<0 || x>=n || y<0 || y>=m || grid[x][y]=='0'){
            return;
        }
        grid[x][y]='0';
        
        DFS(grid,x+1,y,n,m);
        DFS(grid,x,y+1,n,m);
        DFS(grid,x-1,y,n,m);
        DFS(grid,x,y-1,n,m);
         
    }
    int numIslands(vector<vector<char>>& grid) {
        int count=0;
        int n=grid.size();
        int m=grid[0].size();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1'){
                    DFS(grid,i,j,n,m);
                    count++;
                }
            }
        }
        return count;
    }
};
