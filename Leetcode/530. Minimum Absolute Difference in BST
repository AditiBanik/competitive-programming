/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> temp;
    int travel(TreeNode* root,int& min_diff,int& val){
        if(root->left!=nullptr){
            travel(root->left,min_diff,val);
        }
        if(val>=0){
            min_diff = min(min_diff,root->val-val);
        }
        
        val=root->val;

        if(root->right!=nullptr){
            travel(root->right,min_diff,val);    
        }
        return min_diff;
    }

    int getMinimumDifference(TreeNode* root) {
        int min_diff=INT_MAX,val=-1;
        min_diff=travel(root,min_diff,val);
        return min_diff;
    }
};
