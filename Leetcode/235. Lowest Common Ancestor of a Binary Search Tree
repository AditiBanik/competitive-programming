/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

class Solution {
public:
    TreeNode* lca(TreeNode* root,int p,int q){
        if(root==NULL){
            return NULL;
        }
        if(root->val==p || root->val==q){
            return root;
        }
        TreeNode* leftlca = lca(root->left,p,q);
        TreeNode* rightlca= lca(root->right,p,q);
        
        if(leftlca && rightlca){
            return root;
        }
        if(leftlca==NULL){
            return rightlca;
        }
        return leftlca;
    }
    
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        TreeNode* ans=lca(root,p->val,q->val);
        if(ans==NULL){
            return NULL;
        }
        else{
            return ans;
        }
    }
};
