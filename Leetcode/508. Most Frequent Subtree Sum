class Solution {
public:
    unordered_map<int,int> m;
    int maxcount=0;
    int generate(TreeNode* root){
        if(root==NULL){
            return 0;
        }
        int val=generate(root->left)+root->val+generate(root->right);
        maxcount=max(maxcount,m[val]+=1);
        return val;
    }
    vector<int> findFrequentTreeSum(TreeNode* root) {
        generate(root);
        vector<int> ans;
        for(auto it:m){
            if(it.second==maxcount){
                ans.push_back(it.first);
            }
        }
        return ans;
    }
};
