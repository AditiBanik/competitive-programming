/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> res;
    bool hasPathSum(TreeNode* root, int sum) {
        if(root==NULL){
            return false;
        }
        int ans=0;
        dfs(root,ans+root->val,res);
        
        for(int i=0;i<res.size();i++){
            if(res[i]==sum){
                return true;
            }
        }
        
        return false;
    }
    void dfs(TreeNode* root,int ans,vector<int>& res){
        if(root->left==NULL && root->right==NULL){
            res.push_back(ans);
            cout<<"ans:"<<ans<<endl;
        }
        if(root->left!=NULL){
             dfs(root->left,ans+root->left->val,res);
        }
        if(root->right!=NULL){
             dfs(root->right,ans+root->right->val,res);
        }
        
    }
};
