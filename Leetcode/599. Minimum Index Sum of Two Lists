class Solution {
public:   
    vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {
        unordered_map<string,pair<int,int>> m;
        vector<string> ans;
        vector<pair<int,string>> temp;
        
        for(int i=0;i<list1.size();i++){
            m[list1[i]].first+=1;
            m[list1[i]].second+=i;
        }
        for(int i=0;i<list2.size();i++){
            m[list2[i]].first+=1;
            m[list2[i]].second+=i;
        }
        
        for(auto it:m){
            if(it.second.first>1){
                temp.push_back(make_pair(it.second.second,it.first));
            }
        }
        
        sort(temp.begin(),temp.end());
        int val=-1;
        for(auto it:temp){
            if(val==-1){
                ans.push_back(it.second);
                val=it.first;
            }
            else if(val==it.first){
                ans.push_back(it.second);
            }
            else{
                break;
            }
        }
        return ans;
    }
};
