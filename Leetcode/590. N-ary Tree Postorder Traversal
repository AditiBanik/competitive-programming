/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> postorder(Node* root) {
       
        vector<int> ans;
        stack<Node*> s;
        s.push(root);
        
        if(root==NULL){
            return ans;
        }
        
        while(!s.empty()){
            Node* front = s.top();
                s.pop();
                for(int i=0;i<front->children.size();i++){
                    s.push(front->children[i]);
                }
                ans.push_back(front->val);
            }
        
        reverse(ans.begin(),ans.end());
        for(auto it:ans){
            cout<<it<<" ";
        }
        
        return ans;
    }
};
