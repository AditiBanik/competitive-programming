/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* findlca(TreeNode* root,int p,int q){
        if(root==NULL){
            return NULL;
        }
        
        if(root->val==p || root->val==q){
            return root;
        }
        
        TreeNode* leftnode=findlca(root->left,p,q);
        TreeNode* rightnode=findlca(root->right,p,q);
        
        if(leftnode && rightnode){
            return root;
        }
        
        if(leftnode==NULL){
            return rightnode;
        }
        return leftnode;
    }
    
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        TreeNode* lca=findlca(root,p->val,q->val);
        return lca;
    }
};
