/**
 * class Tree {
 *     public:
 *         int val;
 *         Tree *left;
 *         Tree *right;
 * };
 */
class BSTIterator {
    public:
    vector<int> ans;
    int ptr=0;
    void travel(Tree* root,vector<int>& ans){
        if(root==NULL){
            return;
        }
        ans.push_back(root->val);
        travel(root->left,ans);
        travel(root->right,ans);
    }
    BSTIterator(Tree* root) {
        travel(root,ans);
        sort(ans.begin(),ans.end());
    }

    int next() {
        if(ptr<ans.size()){
            int val=ans[ptr];
            ptr+=1;
            return val;
        }
        return 0;
    }

    bool hasnext() {
        if(ptr<ans.size()){
            return true;
        }
        return false;
    }
};
