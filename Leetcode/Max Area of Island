class Solution {
public:
    vector<vector<int>> dir={{0,1},{1,0},{-1,0},{0,-1}};
    
    void DFS(vector<vector<int>>& grid,int posx,int posy,int& n,int& m,int& count){
        
        grid[posx][posy]=0;
        
        for(int i=0;i<4;i++){
            int x=posx+dir[i][0];
            int y=posy+dir[i][1];
            if(x>=0 && x<n && y>=0 && y<m && grid[x][y]==1){
                count+=1;
                DFS(grid,x,y,n,m,count);
            }
        }
    }
    
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int maxvalue=0;
        int n=grid.size();
        int m=grid[0].size();
        int count=0;
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1){
                    count+=1;
                    DFS(grid,i,j,n,m,count);
                    maxvalue=max(maxvalue,count);
                    count=0;
                }
            }
        }
        return maxvalue;
    }
};
