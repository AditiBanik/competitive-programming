class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        long long int n=obstacleGrid.size();
        long long int m=obstacleGrid[0].size();
        if(obstacleGrid[n-1][m-1]==1){
            return 0;
        }
        if(obstacleGrid[0][0]==1){
            return 0;
        }
        vector<vector<long long int>> v(n+1,vector<long long int>(m+1,0));
        
        
        for(long long int i=0;i<n;i++){
            for(long long int j=0;j<m;j++){
                if(obstacleGrid[i][j]==1){
                    v[i][j]=-1;
                }
            }
        }
        
        v[n-1][m-1]=1;
        for(long long int i=n-1;i>=0;i--){
            for(long long int j=m-1;j>=0;j--){
                if(v[i][j]!=-1){
                    if(v[i][j+1]!=-1){
                        v[i][j]+=v[i][j+1];
                    }
                    if(v[i+1][j]!=-1){
                        v[i][j]+=v[i+1][j];
                    }
                }
            }
        }
        return v[0][0];
    }
};
