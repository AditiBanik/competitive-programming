/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        int leftmost;
        queue<TreeNode*> q;
        q.push(root);
        if(root==NULL){
            return 0;
        }
        while(!q.empty()){
            leftmost=-1;
            int len=q.size();
            while(len--){
                TreeNode* front=q.front();
                q.pop();
                if(front->left){
                    q.push(front->left);
                }
                if(front->right){
                    q.push(front->right);
                }
                if(leftmost==-1){
                    leftmost=front->val;    
                }
            }
        }  
        
        return leftmost;
    }
};

