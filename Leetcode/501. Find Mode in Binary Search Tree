/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    map<int,int> m;
    void travel(TreeNode* root){
        if(root==NULL){
            return;
        }
        m[root->val]++;
        travel(root->left);
        travel(root->right);
    }
    vector<int> findMode(TreeNode* root) {
        travel(root);
        vector<int> ans;
        int mode=0;
        for(auto it:m){
            if(mode<it.second){
                mode=it.second;
            }
        }
        for(auto it:m){
            if(mode==it.second){
                ans.push_back(it.first);
            }   
        }
        return ans;
    }
};
