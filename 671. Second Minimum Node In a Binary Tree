/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    set<int> s;
    void travel(TreeNode* root){
        if(root==nullptr){
            return;
        }
        travel(root->left);
        s.insert(root->val);
        travel(root->right);
    }
    int findSecondMinimumValue(TreeNode* root) {
        travel(root);
        int val=0,count=0;
        for(auto it:s){
            count+=1;
            if(count==2){
                val=it;
                break;
            }
        }
        if(val==0){
            return -1;
        }
        else{
            return val;
        }
    }
};
